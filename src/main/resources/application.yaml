spring:
  application:
    name: EM Stitching API
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
    database: postgresql
    show-sql: ${SHOW_SQL:false}
    open-in-view: false
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
  liquibase:
    enabled: ${ENABLE_LIQUIBASE:false}
    change-log: classpath:/db/db.changelog-master.xml
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5431/emstitch}
    username: ${SPRING_DATASOURCE_USERNAME:emstitch}
    password: ${SPRING_DATASOURCE_PASSWORD:emstitch}
    tomcat:
      max-active: ${MAX_ACTIVE_DB_CONNECTIONS:50} # Maximum number of active connections that can be allocated from this pool at the same time.
      max-idle: ${MAX_IDLE_DB_CONNECTIONS:25}
      max-wait: ${MAX_WAIT_DB_CONNECTIONS:10000} # Number of ms to wait before throwing an exception if no connection is available.
      test-on-borrow: ${TEST_ON_BORROW_DB_CONNECTION:true}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      auto-commit: false
  batch:
    job:
      enabled: false
      cron: ${JOB_CRON_EXPRESSION:"*/5 * * * * *"}
    initialize-schema: never
    document-task-milliseconds: ${DOCUMENT_TASK_MILLISECONDS:2000}
    # run cleanup every 1 hour (since a single execution should not run longer than 1 hour)
    historicExecutionsRetentionMilliseconds: ${HISTORIC_EXECUTIONS_RETENTION_MILLISECONDS:3600000}
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:http://localhost:5000/o}
        registration:
          oidc:
            client-id: microservicekey-em-stitching-api
            client-secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}


docmosis:
  accessKey: ${DOCMOSIS_ACCESS_KEY:SOMETHING}
  convert.endpoint: ${DOCMOSIS_ENDPOINT:https://docmosis-development.platform.hmcts.net/rs/convert}
  render.endpoint: ${DOCMOSIS_RENDER_ENDPOINT:https://docmosis-development.platform.hmcts.net/rs/render}

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: '/'
      exposure:
        include:
         - health
         - info
  health:
    db:
      enabled: true
    disk:
      enabled: true
      threshold: ${HEALTH_DISK_THRESHOLD:262144000}
    status:
     order:
       - FATAL
       - DOWN
       - UNKNOWN
       - UP
  info:
     build:
       enabled: true # Whether to enable build info.
     defaults:
       enabled: true # Whether to enable default info contributors.
     env:
       enabled: true # Whether to enable environment info.
     git:
       enabled: true # Whether to enable git info.
       mode: simple # Mode to use to expose git information.

info:
  app:
    environment: ${PACKAGES_ENVIRONMENT:local}
    project: ${PACKAGES_PROJECT:em-stitching}
    name: ${PACKAGES_NAME:cor}
#    version: ${PACKAGES_VERSION:unknown}

auth:
  idam:
    client:
      baseUrl: ${IDAM_API_BASE_URI:http://localhost:5000}
  provider:
    service:
      client:
        baseUrl: ${S2S_BASE_URI:http://localhost:4502}

# service-auth-provider-client lib
idam:
  api:
    url: ${IDAM_API_BASE_URI:http://localhost:5000}
  s2s-auth:
    url: ${S2S_BASE_URI:http://localhost:4502}
    totp_secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}
    microservice: ${S2S_SERVICE_NAME:em_stitching_api}
  s2s-authorised:
    services: ${S2S_NAMES_WHITELIST:jui_webapp,em_ccd_orchestrator,em_gw}

azure:
  app_insights_key: ${APPINSIGHTS_INSTRUMENTATIONKEY:true}
  application-insights:
    instrumentation-key: ${APPINSIGHTS_INSTRUMENTATIONKEY:d30268e8-8979-4579-8d58-010dbe03a1e6}

app-insights:
  dev-mode: off
  request-component: on
  telemetry-component: on

dm-store-app:
  base-url: ${DM_STORE_APP_URL:http://localhost:4603}

task:
  env: ${TASK_ENV:documentTaskLock-local}

stitching-complete:
  callback:
    delay-milliseconds: ${CALLBACK_DELAY_MILLISECONDS:5000}