buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.6.0")
        classpath("net.serenity-bdd:serenity-single-page-report:2.6.0")
    }
}

plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.5.5'
    id 'uk.gov.hmcts.java' version '0.12.14'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
    id 'checkstyle'
    id 'org.liquibase.gradle' version '2.0.4'
    id 'au.com.dius.pact' version '4.2.14'
    id "info.solidsoft.pitest" version '1.5.2'

}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

if (!project.hasProperty('runList')) {
    project.ext.runList = 'main'
}

group 'uk.gov.hmcts.reform.em.stitching'
version '0.1.0'
sourceCompatibility = 11
targetCompatibility = 11

mainClassName = 'uk.gov.hmcts.reform.em.stitching.Application'

configurations {
    aatImplementation.extendsFrom(testImplementation)
    aatRuntimeOnly.extendsFrom(testRuntimeOnly)
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

def versions = [
        serenity           : '2.6.0',
        serenityreporter   : '2.6.0',
        serenityRestAssured : '2.6.0',
        pact_version       : '4.0.10',
        logging            : '5.1.7',
        springfoxSwagger   : '2.9.2',
        springSecurity     : '5.5.2',
        fasterXmlJackson   : '2.13.0',
        mapstruct          : '1.4.2.Final',
        hibernate          : '5.6.0.Final',
        jupiter            : '5.6.3',
        pitest             : '1.5.1',
        gradlePitest       : '1.3.0',
        postgresql         : '42.2.20',
        shedlock           : '4.28.0'
]

pitest {
    targetClasses = ['uk.gov.hmcts.reform.em.stitching.*']
    excludedClasses = [
            'uk.gov.hmcts.reform.em.stitching.appinsights.*' ,
            'uk.gov.hmcts.reform.em.stitching.info.*',
            'uk.gov.hmcts.reform.em.stitching.Application.java'
    ]

    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation ='build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 5
    coverageThreshold = 0
    maxMutationsPerClass = 15
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true

}

project.tasks['sonarqube'].group = "Verification"

sourceSets {
    aat {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    test {
        java.srcDir 'src/test/java'
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}
configurations.all {
    exclude group: 'com.vaadin.external.google',module: 'android-json'
}
dependencies {

    def withoutStuff = {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
        exclude group: 'com.github.hmcts.java-logging', module: 'logging-spring'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-test'
    }

    def withoutAlpnApi = {
        exclude group: 'org.eclipse.jetty.alpn', module: 'alpn-api'
    }

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-batch'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.4'

    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.48'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '9.0.48'

    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
    
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity

    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.2'

    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.fasterXmlJackson
    implementation group:'com.fasterxml.jackson.module', name: 'jackson-module-afterburner', version: versions.fasterXmlJackson

    implementation group: 'org.zalando', name: 'problem-spring-web', version: '0.26.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

    implementation group: 'org.apache.httpcomponents', name : 'httpclient', version: '4.5.13'
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.5.0'
    implementation group: 'org.mapstruct', name: 'mapstruct-jdk8', version: versions.mapstruct
    implementation group: 'org.postgresql', name: 'postgresql', version: versions.postgresql
    implementation group: 'org.ehcache', name:'ehcache', version: '3.9.7'

    implementation group:'org.hibernate', name: 'hibernate-core', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-jcache', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-entitymanager', version: versions.hibernate
    implementation group:'org.hibernate', name: 'hibernate-envers', version: versions.hibernate
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator'

    implementation group: 'pl.touk', name: 'throwing-function', version: '1.3'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.0'
    implementation group: "org.apache.commons", name: "commons-lang3", version: "3.12.0"
    implementation group: "commons-validator", name: "commons-validator", version: "1.7"

    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: "2.0.24"
    implementation group: "net.javacrumbs.shedlock", name: "shedlock-spring", version: versions.shedlock
    implementation group: "net.javacrumbs.shedlock", name: "shedlock-provider-jdbc-template", version: versions.shedlock

    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: '2.1.5', withoutStuff
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.logging
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: versions.logging
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-spring', version: versions.logging

    implementation group: "com.vladmihalcea", name: "hibernate-types-52", version: "2.13.0"

    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '11.6'
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '4.0.2'
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '2.0.1', withoutStuff

    implementation group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    liquibaseRuntime group: 'org.liquibase', name: 'liquibase-core', version: '4.5.0'
    liquibaseRuntime group: 'org.liquibase.ext', name: 'liquibase-hibernate5', version: '4.5.0'
    liquibaseRuntime sourceSets.main.compileClasspath
    liquibaseRuntime sourceSets.main.output
    liquibaseRuntime group: 'org.liquibase', name: 'liquibase-groovy-dsl', version: '3.0.2'
    liquibaseRuntime group: 'org.postgresql', name: 'postgresql', version: versions.postgresql
    liquibaseRuntime group: 'com.h2database', name: 'h2'

    implementation group: 'org.mapstruct', name: 'mapstruct', version: versions.mapstruct
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapstruct
    annotationProcessor group:'org.hibernate', name: 'hibernate-jpamodelgen', version: versions.hibernate
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', withoutStuff
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', withoutStuff
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'
    testImplementation group: 'com.github.gmazzo', name: 'okhttp-mock', version: '1.4.1'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenityRestAssured, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter

    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.6.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    testRuntimeOnly group: 'org.junit.jupiter', name:  'junit-jupiter-engine', version: versions.jupiter

    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.2.1', classifier: 'all'
    
    //pact contract testing

    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    contractTestRuntimeOnly group: 'org.junit.jupiter', name:  'junit-jupiter-engine', version: versions.jupiter

    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit', version: versions.pact_version, withoutAlpnApi
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit5', version: versions.pact_version, withoutAlpnApi
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-java8', version: versions.pact_version, withoutAlpnApi
    implementation group: 'au.com.dius', name: 'pact-jvm-consumer', version: versions.pact_version, withoutAlpnApi

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    contractTestImplementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    aatImplementation group: 'com.github.hmcts', name: 'em-test-helper', version: '1.20.3', withoutStuff
}

dependencyManagement {
    dependencies {

        //CVE-2020-15824, CVE-2020-29582
        dependencySet(group: 'org.jetbrains.kotlin', version: '1.5.0-M1') {
            entry 'kotlin'
            entry 'kotlin-stdlib'
            entry 'kotlin-reflect'
            entry 'kotlin-stdlib-common'
            entry 'kotlin-stdlib-jdk7'
            entry 'kotlin-stdlib-jdk8'
        }

        //CVE-2021-29425
        dependencySet(group: 'commons-io', version: '2.11.0') {
          entry 'commons-io'
        }

        // Do not change - START
        // Changing below will break Serenity Report generation
        dependencySet(group: 'junit', version: '4.13') {
            entry 'junit'
        }

        dependencySet(group: 'org.junit.jupiter', version: '5.6.3') {
            entry 'junit-jupiter'
            entry 'junit-jupiter-api'
            entry 'junit-jupiter-params'
        }

        dependencySet(group: 'org.junit.vintage', version: '5.6.2') {
            entry 'junit-vintage-engine'
        }

        dependencySet(group: 'net.bytebuddy', version: '1.11.2') {
            entry 'byte-buddy'
            entry 'byte-buddy-agent'
        }
        // Do not change - END

        //CVE-2021-27568
        dependencySet(group: 'net.minidev', version: '2.4.7') {
            entry 'json-smart'
        }

        //CVE-2021-22118
        dependencySet(group: 'org.springframework', version: '5.3.10') {
            entry 'spring-aop'
            entry 'spring-aspects'
            entry 'spring-beans'
            entry 'spring-context'
            entry 'spring-core'
            entry 'spring-expression'
            entry 'spring-jcl'
            entry 'spring-jdbc'
            entry 'spring-orm'
            entry 'spring-tx'
            entry 'spring-web'
            entry 'spring-webmvc'
        }

        //CVE-2021-33037
        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.48') {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-websocket'
        }
    }
}

//loading properties file.
Properties liquibaseProps = new Properties()
liquibaseProps.load(new FileInputStream("$projectDir/src/main/resources/liquibase.properties"))

liquibase {
    activities {
        main {
            driver liquibaseProps.getProperty('driver')
            url project.hasProperty("dburl") ? "jdbc:postgresql://$dburl" : liquibaseProps.getProperty('url')
            username project.hasProperty("flyway.user") ? "${rootProject.properties['flyway.user']}" : liquibaseProps.getProperty('username')
            password project.hasProperty("flyway.password") ? "${rootProject.properties['flyway.password']}" : liquibaseProps.getProperty('password')
            changeLogFile liquibaseProps.getProperty('changeLogFile')
            referenceUrl liquibaseProps.getProperty('referenceUrl')
            defaultSchemaName ''
            logLevel 'debug'
            classpath 'src/main/resources/'
        }
        diffLog {
            driver liquibaseProps.getProperty('driver')
            url project.hasProperty("dburl") ? "jdbc:postgresql://$dburl" : liquibaseProps.getProperty('url')
            username project.hasProperty("flyway.user") ? "${rootProject.properties['flyway.user']}" : liquibaseProps.getProperty('username')
            password project.hasProperty("flyway.password") ? "${rootProject.properties['flyway.password']}" : liquibaseProps.getProperty('password')
            changeLogFile liquibaseProps.getProperty('changeLogFile')
            referenceUrl liquibaseProps.getProperty('referenceUrl')
            defaultSchemaName ''
            logLevel 'debug'
            classpath 'src/main/resources/'
        }
    }

    runList = project.ext.runList
}

liquibaseDiff.dependsOn compileJava
liquibaseDiffChangeLog.dependsOn compileJava

bootJar {
    getArchiveFileName().set(provider {
        'rpa-em-stitching-api.jar'
    })
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
}

checkstyle {
    maxWarnings = 10
    toolVersion = '8.12'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

def coverageExclusionList = [
    '**uk/gov/hmcts/reform/em/stitching/Application*',
    '**uk/gov/hmcts/reform/em/stitching/appinsights/*',
    '**uk/gov/hmcts/reform/em/stitching/config/*',
    '**uk/gov/hmcts/reform/em/stitching/config/logging/*',
    '**uk/gov/hmcts/reform/em/stitching/config/audit/*',
    '**uk/gov/hmcts/reform/em/stitching/info/*',
    '**uk/gov/hmcts/reform/em/stitching/service/mapper/*',
    '**uk/gov/hmcts/reform/em/stitching/domain/*',
    '**uk/gov/hmcts/reform/em/stitching/service/dto/*',
    '**uk/gov/hmcts/reform/em/stitching/config/security/*',
]

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

}

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "EM Stitching API"
        property "sonar.projectKey", "em-stitching-api"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.tests", "src/test/java"
    }
}

test {
    useJUnitPlatform()
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/stitching/functional/**"
    failFast = true

    testLogging {
        exceptionFormat = 'full'
    }

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}


// Serenity Single page Reports
// functional.finalizedBy(aggregate)


task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/stitching/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task migratePostgresDatabase(dependsOn: 'liquibaseUpdate')

compileJava.dependsOn processResources

task contract(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/em/stitching/**"
    systemProperty 'pact.rootDir', "pacts"
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task runAndPublishConsumerPactTests(type: Test){
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

runAndPublishConsumerPactTests.dependsOn contract

runAndPublishConsumerPactTests.finalizedBy pactPublish

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

serenity {
    reports = ["single-page-html"]
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        version = project.pactVersion
    }
}
