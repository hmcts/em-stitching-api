buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.3.8")
        classpath("net.serenity-bdd:serenity-single-page-report:2.3.8")
    }
}

plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'uk.gov.hmcts.java' version '0.12.0'
    id 'com.github.ben-manes.versions' version '0.36.0'
    id 'org.sonarqube' version '3.0'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'org.liquibase.gradle' version '2.0.4'
    id 'au.com.dius.pact' version '4.1.7'
    id "info.solidsoft.pitest" version '1.5.2'

}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

if (!project.hasProperty('runList')) {
    project.ext.runList = 'main'
}

group 'uk.gov.hmcts.reform.em.stitching'
version '0.0.1'
sourceCompatibility = 11
targetCompatibility = 11

mainClassName = 'uk.gov.hmcts.reform.em.stitching.Application'

configurations {
    aatCompile.extendsFrom(testCompile)
    aatRuntime.extendsFrom(testRuntime)
}

repositories {
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
    mavenLocal()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

def versions = [
        serenity           : '2.3.5',
        serenityreporter   : '2.3.5',
        serenityRestAssured : '2.3.4',
        pact_version       : '4.0.10',
        logging            : '5.1.7',
        springfoxSwagger   : '2.9.2',
        springSecurity     : '5.3.4.RELEASE',
        fasterXmlJackson   : '2.11.3',
        mapstruct          : '1.3.1.Final',
        hibernate          : '5.4.22.Final',
        jupiter            : '5.3.2',
        pitest             : '1.5.1',
        gradlePitest       : '1.3.0',
        sonarPitest        : '0.5',
        postgresql         : '42.2.14'
]

pitest {
    targetClasses = ['uk.gov.hmcts.reform.em.stitching.*']
    excludedClasses = [
            'uk.gov.hmcts.reform.em.stitching.appinsights.*' ,
            'uk.gov.hmcts.reform.em.stitching.info.*',
            'uk.gov.hmcts.reform.em.stitching.Application.java'
    ]

    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation ='build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 5
    coverageThreshold = 0
    maxMutationsPerClass = 15
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true

}

project.tasks['sonarqube'].group = "Verification"

sourceSets {
    aat {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir('src/aat/java')
        }
        resources {
            srcDir('src/aat/resources')
        }
    }
    test {
        java.srcDir 'src/test/java'
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contactTest/resources')
    }
}
configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group in ['org.apache.tomcat.embed']) {
                details.useVersion '9.0.37'
            }
            if (details.requested.group in ['org.springframework']) {
                details.useVersion '5.2.9.RELEASE'
            }
        }
    }
}
dependencies {

    def withoutStuff = {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
        exclude group: 'uk.gov.hmcts.reform', module: 'java-logging-spring'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-test'
    }

    compile(
        "org.springframework.boot:spring-boot-starter-web",
        "org.springframework.boot:spring-boot-starter-actuator",
        "org.springframework.boot:spring-boot-starter-jdbc",
        "org.springframework.boot:spring-boot-starter-validation",
        "org.springframework.boot:spring-boot-starter-batch",
        "org.springframework.boot:spring-boot-starter-data-jpa"
    )

    compile group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    compile group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
    compile group: 'org.springframework.security', name: 'spring-security-web', version: versions.springSecurity
    compile group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity
    compile group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: versions.springSecurity
    compile group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity
    compile group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity

    compile "com.squareup.okhttp3:okhttp:4.9.0"

    compile group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: versions.fasterXmlJackson
    compile group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version: versions.fasterXmlJackson
    compile group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.fasterXmlJackson
    compile group:'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: versions.fasterXmlJackson
    compile group:'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.fasterXmlJackson
    compile group:'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.fasterXmlJackson
    compile group:'com.fasterxml.jackson.module', name: 'jackson-module-afterburner', version: versions.fasterXmlJackson

    compile "org.zalando:problem-spring-web:0.26.2"
    compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

    compile "org.apache.httpcomponents:httpclient:4.5.12"
    compile "org.liquibase:liquibase-core:4.0.0"
    compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: versions.mapstruct
    compile group: 'org.postgresql', name: 'postgresql', version: versions.postgresql
    compile group: 'org.ehcache', name:'ehcache', version: '3.9.0'

    compile group:'org.hibernate', name: 'hibernate-core', version: versions.hibernate
    compile group:'org.hibernate', name: 'hibernate-jcache', version: versions.hibernate
    compile group:'org.hibernate', name: 'hibernate-entitymanager', version: versions.hibernate
    compile group:'org.hibernate', name: 'hibernate-envers', version: versions.hibernate
    compile "org.hibernate.validator:hibernate-validator"

    compile "pl.touk:throwing-function:1.3"
    compile "com.zaxxer:HikariCP"
    compile group: "org.apache.commons", name: "commons-lang3", version: "3.11"
    compile group: "commons-validator", name: "commons-validator", version: "1.7"
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: "2.0.21"
    compile group: "net.javacrumbs.shedlock", name: "shedlock-spring", version:"4.16.0"
    compile group: "net.javacrumbs.shedlock", name: "shedlock-provider-jdbc-template", version:"4.16.0"

    compile group: "uk.gov.hmcts.reform.auth", name: "auth-checker-lib", version: "2.1.4", withoutStuff
    compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.logging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.logging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.logging
    
    compile group: "uk.gov.hmcts.reform", name: "properties-volume-spring-boot-starter", version:"0.1.0"
    compile group: "com.vladmihalcea", name: "hibernate-types-52", version: "2.10.0"
    compile "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    compile "org.springframework.boot:spring-boot-starter-oauth2-client"
    compile "io.github.openfeign:feign-httpclient:11.0"
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'
    compile group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.5.5'
    compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    compileOnly "org.projectlombok:lombok:1.18.14"

    liquibaseRuntime "org.liquibase:liquibase-core:4.0.0"
    liquibaseRuntime "org.liquibase.ext:liquibase-hibernate5:4.0.0"
    liquibaseRuntime sourceSets.main.compileClasspath
    liquibaseRuntime sourceSets.main.output
    liquibaseRuntime "org.liquibase:liquibase-groovy-dsl:2.1.2"
    liquibaseRuntime group: 'org.postgresql', name: 'postgresql', version: versions.postgresql
    liquibaseRuntime "com.h2database:h2"

    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapstruct
    annotationProcessor group:'org.hibernate', name: 'hibernate-jpamodelgen', version: versions.hibernate
    annotationProcessor "org.projectlombok:lombok:1.18.14"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor", withoutStuff

    testCompile "org.springframework.boot:spring-boot-starter-test", withoutStuff
    testCompile group: 'junit', name: 'junit', version: '4.13'
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
    testCompile 'com.github.gmazzo:okhttp-mock:1.3.2'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    testCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenityRestAssured, withoutStuff
    testCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity, withoutStuff
    testCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    testRuntime group: 'org.junit.jupiter', name:  'junit-jupiter-engine', version: versions.jupiter
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter

    //pact contract testing

    contractTestCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter
    contractTestRuntime group: 'org.junit.jupiter', name:  'junit-jupiter-engine', version: versions.jupiter
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.jupiter

    contractTestCompile group: 'au.com.dius', name: 'pact-jvm-consumer-junit', version: versions.pact_version
    contractTestCompile group: 'au.com.dius', name: 'pact-jvm-consumer-junit5', version: versions.pact_version
    contractTestCompile group: 'au.com.dius', name: 'pact-jvm-consumer-java8', version: versions.pact_version
    compile group: 'au.com.dius', name: 'pact-jvm-consumer', version: versions.pact_version

    contractTestCompile sourceSets.main.runtimeClasspath
    contractTestCompile sourceSets.test.runtimeClasspath

    aatCompile "uk.gov.hmcts.reform:em-test-helper:1.18.0", withoutStuff
}

//loading properties file.
Properties liquibaseProps = new Properties()
liquibaseProps.load(new FileInputStream("$projectDir/src/main/resources/liquibase.properties"))

liquibase {
    activities {
        main {
            driver liquibaseProps.getProperty('driver')
            url project.hasProperty("dburl") ? "jdbc:postgresql://$dburl" : liquibaseProps.getProperty('url')
            username project.hasProperty("flyway.user") ? "${rootProject.properties['flyway.user']}" : liquibaseProps.getProperty('username')
            password project.hasProperty("flyway.password") ? "${rootProject.properties['flyway.password']}" : liquibaseProps.getProperty('password')
            changeLogFile liquibaseProps.getProperty('changeLogFile')
            referenceUrl liquibaseProps.getProperty('referenceUrl')
            defaultSchemaName ''
            logLevel 'debug'
            classpath 'src/main/resources/'
        }
        diffLog {
            driver liquibaseProps.getProperty('driver')
            url project.hasProperty("dburl") ? "jdbc:postgresql://$dburl" : liquibaseProps.getProperty('url')
            username project.hasProperty("flyway.user") ? "${rootProject.properties['flyway.user']}" : liquibaseProps.getProperty('username')
            password project.hasProperty("flyway.password") ? "${rootProject.properties['flyway.password']}" : liquibaseProps.getProperty('password')
            changeLogFile liquibaseProps.getProperty('changeLogFile')
            referenceUrl liquibaseProps.getProperty('referenceUrl')
            defaultSchemaName ''
            logLevel 'debug'
            classpath 'src/main/resources/'
        }
    }

    runList = project.ext.runList
}

liquibaseDiff.dependsOn compileJava
liquibaseDiffChangeLog.dependsOn compileJava

bootJar {
    baseName 'rpa-em-stitching-api'
    archiveName = "$baseName"+".jar"
    destinationDir = file("$rootDir/build/libs")
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
}

pmd {
    toolVersion = "6.11.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

def coverageExclusionList = [
    '**uk/gov/hmcts/reform/em/stitching/Application*',
    '**uk/gov/hmcts/reform/em/stitching/appinsights/*',
    '**uk/gov/hmcts/reform/em/stitching/config/*',
    '**uk/gov/hmcts/reform/em/stitching/config/logging/*',
    '**uk/gov/hmcts/reform/em/stitching/config/audit/*',
    '**uk/gov/hmcts/reform/em/stitching/info/*',
    '**uk/gov/hmcts/reform/em/stitching/service/mapper/*',
    '**uk/gov/hmcts/reform/em/stitching/domain/*',
    '**uk/gov/hmcts/reform/em/stitching/service/dto/*',
    '**uk/gov/hmcts/reform/em/stitching/config/security/*',
]

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = true

        xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"

    }
}

checkstyle {
    maxWarnings = 10
    toolVersion = '8.12'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    configDir = new File(rootDir, 'config/checkstyle')
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/stitching/functional/**"
    failFast = true

    testLogging {
        exceptionFormat = 'full'
    }
    
    // Serenity Single page Reports
    functional.finalizedBy(aggregate)

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/stitching/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task migratePostgresDatabase(dependsOn: 'liquibaseUpdate')

compileJava.dependsOn processResources

task contract(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/em/stitching/**"
    systemProperty 'pact.rootDir', "pacts"
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task runAndPublishConsumerPactTests(type: Test){
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

runAndPublishConsumerPactTests.dependsOn contract

runAndPublishConsumerPactTests.finalizedBy pactPublish

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

serenity {
    reports = ["single-page-html"]
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        version = project.pactVersion
    }
}